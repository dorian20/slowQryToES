
//assume role
aws sts assume-role --role-arn arn:aws:iam::515303172277:role/B2_IA --role-session-name "RoleSession1" 
//--profile IAM-user-name > assume-role-output.txt

//set env
$ export AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY
$ export AWS_SECRET_ACCESS_KEY=YOUR_SECRET_ACCESS_KEY
$ export AWS_SESSION_TOKEN=YOUR_SESSION_TOKEN

//cloudformation 배포하기 

//first #1
//package
sam package --template-file ./deploy/slowQryLogToES_seoul_b2dev.yaml --output-template-file serverless-output.yaml \
   --s3-bucket b2dev.lambda.lotte.net --profile crossaccount_seoul_b2_dev

aws cloudformation package --template-file ./deploy/slowQryLogToES_seoul_b2tst.yaml --output-template-file serverless-output.yaml \
   --s3-bucket b2tst.lambda.lotte.net --profile crossaccount_seoul_b2_tst

aws cloudformation package --template-file ./deploy/slowQryLogToES_seoul_elltdev.yaml --output-template-file serverless-output.yaml \
   --s3-bucket elltdev.lambda.lotte.net --profile crossaccount_seoul_ellt_dev

aws cloudformation package --template-file ./deploy/slowQryLogToES_seoul_ellttst.yaml --output-template-file serverless-output.yaml \
   --s3-bucket ellttst.lambda.lotte.net --profile crossaccount_seoul_ellt_tst

aws cloudformation package --template-file ./deploy/slowQryLogToES_seoul_prd.yaml --output-template-file serverless-output.yaml \
   --s3-bucket b2.lambda.lotte.net --profile crossaccount_seoul_prd            

//second #2
//deploy
sam deploy --template-file ./serverless-output.yaml \
   --stack-name slowQryLogToESStack --capabilities CAPABILITY_IAM --profile crossaccount_seoul_b2_dev --parameter TrafficShiftType=AllAtOnce   

aws cloudformation deploy --template-file ./serverless-output.yaml \
   --stack-name slowQryLogToESStack --capabilities CAPABILITY_IAM --profile crossaccount_seoul_b2_tst --parameter TrafficShiftType=AllAtOnce

aws cloudformation deploy --template-file ./serverless-output.yaml \
   --stack-name slowQryLogToESStack --capabilities CAPABILITY_IAM --profile crossaccount_seoul_ellt_dev --parameter TrafficShiftType=AllAtOnce

aws cloudformation deploy --template-file ./serverless-output.yaml \
   --stack-name slowQryLogToESStack --profile crossaccount_seoul_ellt_tst

aws cloudformation deploy --template-file ./serverless-output.yaml \
   --stack-name slowQryLogToESStack --profile crossaccount_seoul_prd



sam package --template-file ./SAMTemplete.yaml --output-template-file SAMTemplete-output.yaml \
   --s3-bucket dev.seoul.087518667058.nadir --profile crossaccount_seoul_b2_dev   

//second #2
//deploy
aws cloudformation deploy --template-file ./SAMTemplete-output.yaml \
   --stack-name testCanaryStack  --capabilities CAPABILITY_IAM --profile crossaccount_seoul_b2_dev

sam deploy --template-file ./SAMTemplete-output.yaml  \
   --stack-name testCanaryStack  --capabilities CAPABILITY_IAM --profile crossaccount_seoul_b2_dev --parameter TrafficShiftType=Canary10Percent10Minutes   
   
//AllAtOnce

//cloudformation 배포하기 end


//aws s3 ls --profile default   
//aws s3 mb s3://dev.seoul.515303172277.nadir --profile crossaccount_seoul_elltdev

.aws credentials
[crossaccount_seoul_b2_dev]
role_arn = arn:aws:iam::087518667058:role/B2_IA
source_profile = default
region = ap-northeast-2

[crossaccount_seoul_ellt_dev]
role_arn = arn:aws:iam::515303172277:role/B2_IA
source_profile = default
region = ap-northeast-2

[crossaccount_seoul_elasticsearch]
role_arn = arn:aws:iam::877551073942:role/B2_IA
source_profile = default
region = ap-northeast-2

[crossaccount_seoul_b2_tst]
role_arn = arn:aws:iam::885426109155:role/B2_IA
source_profile = default
region = ap-northeast-2

[crossaccount_seoul_ellt_tst]
role_arn = arn:aws:iam::022222764296:role/B2_IA
source_profile = default
region = ap-northeast-2

[crossaccount_seoul_prd]
role_arn = arn:aws:iam::449512021474:role/B2_IA
source_profile = default
region = ap-northeast-2